---
name: Run Newman Tests on Render API
'on':
  push:
    branches:
      - main
  workflow_dispatch: null
jobs:
  run-newman-tests:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3
      - name: 🛠 Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: 📦 Install project dependencies (faker included)
        run: npm install
      - name: 📦 Install Newman
        run: npm install -g newman
      - name: 🧪 Generate CSV file
        run: node generate-csv.js
      - name: ✅ Run Newman tests
  run: |
    npx newman run upload-collection.json \
      --env-var base_url=https://playing-with-api.onrender.com \
      --env-var file=@temp.csv \
      --reporters cli,json,htmlextra \
      --reporter-json-export newman-report.json \
      --reporter-htmlextra-export newman-report.html

    - name: 📎 Send report to Telegram
      if: always()
       run: |
    if [ "${{ job.status }}" = "success" ]; then
      curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
        -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
        -F document=@newman-report.html \
        -F caption="✅ *Newman Tests Passed*\nHere is the HTML report." \
        -F parse_mode=Markdown
    else
      curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
        -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
        -F document=@newman-report.json \
        -F caption="❌ *Newman Tests Failed*\nHere is the JSON report for debugging." \
        -F parse_mode=Markdown
    fi

    - name: 📲 Send Telegram Notification
      if: always()
      run: |
        curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
        -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
        -d parse_mode=Markdown \
        -d text="🧪 *Newman Test Run Completed*
        *Status:* ${{ job.status }}
        *Repo:* ${{ github.repository }}
        *Actor:* ${{ github.actor }}
        *Time:* $(date -u)"
