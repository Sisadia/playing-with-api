name: 🔁 Automated API Testing with CSV & Telegram

on:
 push:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:

      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📂 Install dependencies
        run: npm install

      - name: 📄 Generate unique CSV data
        run: node generate-csv.js

      - name: 🧹 Clean old test reports
        run: |
          rm -f newman-report.json newman-report.html || true

      - name: ✅ Run Newman tests
        run: |
          npx newman run upload-collection.json \
            --env-var base_url=https://playing-with-api.onrender.com \
            --env-var file=@temp.csv \
            --reporters cli,json,htmlextra \
            --reporter-json-export newman-report.json \
            --reporter-htmlextra-export newman-report.html

      - name: 📊 Extract test summary
        id: summary
        run: |
         PASSED=$(jq '.run.executions | map(select(.assertions[]?.error == null)) | length' newman-report.json)
         FAILED=$(jq '.run.executions | map(select(.assertions[]?.error != null)) | length' newman-report.json)
         echo "passed=$PASSED" >> $GITHUB_OUTPUT
         echo "failed=$FAILED" >> $GITHUB_OUTPUT
      
      - name: 📎 Send HTML report to Telegram
        if: always()
        run: |
         curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
           -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
           -F document=@newman-report.html \
           -F caption="📊 *Newman Test Report*\nStatus: ${{ job.status }}" \
           -F parse_mode=Markdown
